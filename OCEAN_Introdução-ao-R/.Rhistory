15 <= 16
15 == 15 & 16==16
15 == 15 & 15==16
15 == 15 | 15==16
15 == 16 | 16==17
#-----------------#   OPERADORES CONDICIONAIS   #-----------------#
valor5 <- 15
#SIMPLES:
if (valor5 == 15){
print("A variável tem valor igual a 15")
}
#COMPLETA:
if (valor5 != 15){
print("A variável tem valor diferente de 15")
} else{
print("A variável tem valor igual a 15")
}
#-------------------#   LAÇOS DE REPETIÇÃO   #--------------------#
#COMANDO WHILE:
i <- 1
while (i < 10){
print(i)
i <- i +  1
}
#COMANDO WHILE COM BREAK:
i <- 1
while (i < 10){
print(i)
if (i == 7){
break
}
i <- i +  1
}
#COMANDO WHILE COM NEXT:
i <- 1
while (i < 10){
i <- i +  1
if (i == 7){
next
}
print(i)
}
#COMANDO FOR:
flores <- list("setosa","virginica", "versicolor")
for (flor in flores) {
print(flor)
}
#COMANDO FOR COM BREAK:
for (flor in flores) {
if (flor == "virginica"){
break
}
print(flor)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
roll2()
#VETOR
vetor1 <- c("setosa","virginica", "versicolor")
vetor2 <- 1:10
#LISTA
lista1 <- list("Airbus","A", 320, TRUE)
#MATRIZ
matriz1 <- matrix(
c(1,0,0,
0,1,0,
0,0,1),
nrow = 3,
ncol = 3
)
#DATA FRAME
data_frame1 <- data.frame (
Frota_Aeronaves = c("Airbus", "Boeing", "Embraer"),
Azul = c(64, 2, 62),
GOL = c(0, 139, 0),
LATAM = c(134, 22, 0)
)
data_frame1
3.14159 |> cos()
x <- c(1, 2, 3, 4)
x |> sum() |> sqrt()
library(tidyverse)
#1ª CAMADA - Dados
mtcars
#2ª CAMADA - Estética
mtcars |>
ggplot(aes(x=disp, y=mpg))
#3ª CAMADA - Geometria
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue')
#4ª CAMADA - Facets
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am)
#5ª CAMADA - Estatística
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto')
#6ª CAMADA - Coordenadas
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian()
#7ª CAMADA - Temas
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian() +
theme_bw()
#8ª CAMADA - Títulos
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian() +
theme_bw() +
labs(x = 'Cilindradada (in³)',
y = 'Milha por galão',
title = 'Consumo médio de veículos')
library(tidyverse)
#VETOR
vetor1 <- c("Airbus", "Boeing", "Embraer")
vetor2 <- 1:10
pacotes <- c("readxl","ggpmisc","ggplot2","jtools","kableExtra",
"ggpubr","corrgram","corrplot","PerformanceAnalytics",
"GGally","plotly","lmtest","dplyr","fastDummies",
"caret","pheatmap","animation")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#---#   PRIMEIRO PASSO EM QUALQUER LINGUAGEM DE PROGRAMAÇÃO   #---#
print("Hello World")
#-----------------#   TIPOS DE VARIÁVEIS EM R   #-----------------#
valor1 <- 15
print(valor1)
class(valor1)
valor2 <- 14.9
class(valor2)
valor3 <-  "Bem-vindo ao Ocean"
print(valor3)
class(valor3)
valor4 <- TRUE
print(valor4)
class(valor4)
#------------#   OPERADORES MATEMÁTICOS E LÓGICOS   #-------------#
#OPERADORES MATEMÁTICOS:
8 + 7
20 - 5
5 * 3
45 / 3
151 %% 10
#OPERADORES LÓGICOS:
15 == 15
15 != 14
15 > 15
15 < 16
15 >= 15
15 <= 16
15 == 15 & 16==16
15 == 15 & 15==16
15 == 15 | 15==16
15 == 16 | 16==17
#-----------------#   OPERADORES CONDICIONAIS   #-----------------#
valor5 <- 15
#SIMPLES:
if (valor5 == 15){
print("A variável tem valor igual a 15")
}
#COMPLETA:
if (valor5 != 15){
print("A variável tem valor diferente de 15")
} else{
print("A variável tem valor igual a 15")
}
#-------------------#   LAÇOS DE REPETIÇÃO   #--------------------#
#COMANDO WHILE:
i <- 1
while (i < 10){
print(i)
i <- i +  1
}
#COMANDO WHILE COM BREAK:
i <- 1
while (i < 10){
print(i)
if (i == 7){
break
}
i <- i +  1
}
#COMANDO WHILE COM NEXT:
i <- 1
while (i < 10){
i <- i +  1
if (i == 7){
next
}
print(i)
}
#COMANDO FOR:
flores <- list("setosa","virginica", "versicolor")
for (flor in flores) {
print(flor)
}
#COMANDO FOR COM BREAK:
for (flor in flores) {
if (flor == "virginica"){
break
}
print(flor)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
roll2()
roll2()
roll2()
roll2()
roll2()
roll2()
roll2()
#VETOR
vetor1 <- c("Airbus", "Boeing", "Embraer")
vetor2 <- 1:10
#LISTA
lista1 <- list("Airbus","A", 320, TRUE)
View(lista1)
View(lista1)
#MATRIZ
matriz1 <- matrix(
c(1,0,0,
0,1,0,
0,0,1),
nrow = 3,
ncol = 3
)
#DATA FRAME
data_frame1 <- data.frame (
Frota_Aeronaves = c("Airbus", "Boeing", "Embraer"),
Azul = c(64, 2, 62),
GOL = c(0, 139, 0),
LATAM = c(134, 22, 0)
)
data_frame1
View(data_frame1)
View(data_frame1)
3.14159 |> cos()
library(tidyverse)
#1ª CAMADA - Dados
mtcars
#2ª CAMADA - Estética
mtcars |>
ggplot(aes(x=disp, y=mpg))
#3ª CAMADA - Geometria
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue')
#4ª CAMADA - Facets
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am)
#5ª CAMADA - Estatística
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto')
#6ª CAMADA - Coordenadas
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian()
#7ª CAMADA - Temas
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian() +
theme_bw()
#8ª CAMADA - Títulos
mtcars |>
ggplot(aes(x=disp, y=mpg)) +
geom_point(colour = 'royalblue') +
facet_wrap(~am) +
stat_smooth(method = 'auto') +
coord_cartesian() +
theme_bw() +
labs(x = 'Cilindradada (in³)',
y = 'Milha por galão',
title = 'Consumo Médio de Veículos')
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#---#   PRIMEIRO PASSO EM QUALQUER LINGUAGEM DE PROGRAMAÇÃO   #---#
print("Hello World")
#-----------------#   TIPOS DE VARIÁVEIS EM R   #-----------------#
valor1 <- 15
#---#   PRIMEIRO PASSO EM QUALQUER LINGUAGEM DE PROGRAMAÇÃO   #---#
print("Hello World")
#-----------------#   TIPOS DE VARIÁVEIS EM R   #-----------------#
valor1 <- 15
print(valor1)
class(valor1)
valor2 <- 14.9
class(valor2)
valor3 <-  "Bem-vindo ao Ocean"
print(valor3)
class(valor3)
valor4 <- TRUE
print(valor4)
class(valor4)
#------------#   OPERADORES MATEMÁTICOS E LÓGICOS   #-------------#
#OPERADORES MATEMÁTICOS:
8 + 7
20 - 5
5 * 3
45 / 3
151 %% 10
#OPERADORES LÓGICOS:
15 == 15
15 != 14
15 > 15
15 < 16
15 >= 15
15 <= 16
15 == 15 & 16==16
15 == 15 & 15==16
15 == 15 | 15==16
15 == 16 | 16==17
#-----------------#   OPERADORES CONDICIONAIS   #-----------------#
valor5 <- 15
#SIMPLES:
if (valor5 == 15){
print("A variável tem valor igual a 15")
}
#COMPLETA:
if (valor5 != 15){
print("A variável tem valor diferente de 15")
} else{
print("A variável tem valor igual a 15")
}
#-------------------#   LAÇOS DE REPETIÇÃO   #--------------------#
#COMANDO WHILE:
i <- 1
while (i < 10){
print(i)
i <- i +  1
}
#COMANDO WHILE COM BREAK:
i <- 1
while (i < 10){
print(i)
if (i == 7){
break
}
i <- i +  1
}
#COMANDO WHILE COM NEXT:
i <- 1
while (i < 10){
i <- i +  1
if (i == 7){
next
}
print(i)
}
#COMANDO FOR:
flores <- list("setosa","virginica", "versicolor")
for (flor in flores) {
print(flor)
}
#COMANDO FOR COM BREAK:
for (flor in flores) {
if (flor == "virginica"){
break
}
print(flor)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
roll2()
roll2()
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
sum(dice)
dice <- sample(bones, size = 2, replace=TRUE)
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
#------------------#   DEFINIÇÃO DE FUNÇÕES   #-------------------#
roll2 <- function(bones = 1:6) {
dice <- sample(bones, size = 2, replace=TRUE)
sum(dice)
}
roll2()
roll2()
roll2()
#VETOR
vetor1 <- c("Airbus", "Boeing", "Embraer")
#VETOR
vetor1 <- c("Airbus", "Boeing", "Embraer")
#VETOR
vetor1 <- c("Airbus", "Boeing", "Embraer")
vetor2 <- 1:10
#LISTA
lista1 <- list("Airbus","A", 320, TRUE)
#MATRIZ
matriz1 <- matrix(
c(1,0,0,
0,1,0,
0,0,1),
nrow = 3,
ncol = 3
)
#LISTA
lista1 <- list("Airbus","A", 320, TRUE)
#LISTA
lista1 <- list("Airbus","A", 320, TRUE)
View(lista1)
View(lista1)
#MATRIZ
matriz1 <- matrix(
c(1,0,0,
0,1,0,
0,0,1),
nrow = 3,
ncol = 3
)
View(data_frame1)
View(data_frame1)
#DATA FRAME
data_frame1 <- data.frame (
Frota_Aeronaves = c("Airbus", "Boeing", "Embraer"),
Azul = c(64, 2, 62),
GOL = c(0, 139, 0),
LATAM = c(134, 22, 0)
)
data_frame1
3.14159 |> cos()
x <- c(1, 2, 3, 4)
x |> sum() |> sqrt()
3.14159 |> cos()
3.14159 |> cos()
